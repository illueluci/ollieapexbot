import praw
import os
import random
import datetime

reddit = praw.Reddit(client_id="xxxxxxxxxxxxxxxxxx",
                     client_secret="xxxxxxxxxxxxxxxxxxx",
                     username="ollieapexbot",
                     password="xxxxxxxxxxxxxxxx",
                     user_agent="xxxxxxxxxxxxxxxxx")
# print(reddit.user.me)

COOLDOWN = 60
STRING_OF_SUBREDDITS = "hololive+" \
                       "holostars+" \
                       "VirtualYoutubers+" \
                       "KureijiOllie+" \
                       "Animemes+" \
                       "goodanimemes+" \
                       "anime+" \
                       "indowibu+" \
                       "ollieapexbottest"

class RedditBot:
    def __init__(self):
        self.trigger_word = "apex"
        self.dont_trigger_word = ["u/illueluci", "bot", "peko"]
        self.response_list = ["DID SOMEBODY SAY APEX!?", "MABAR APEX YUK"]
        self.last_posted_time = datetime.datetime.now()

    def find_match(self, comment):
        print(comment.body.casefold())
        condition1 = self.trigger_word in comment.body.casefold()
        condition2 = not(any([s in comment.body.casefold() for s in self.dont_trigger_word]))
        if condition1 and condition2:
            if self.cooled_down():
                self.make_reply(comment)
            else:
                print(f"Cooling down! Please wait "
                      f"{COOLDOWN - (datetime.datetime.now() - self.last_posted_time).total_seconds()} seconds.")

    def cooled_down(self):
        time_now = datetime.datetime.now()
        difference = time_now - self.last_posted_time
        if difference.total_seconds() > COOLDOWN:
            return True
        else:
            return False

    def make_reply(self, comment):
        try:
            comment.reply(f"[{random.choice(self.response_list)}](https://youtu.be/VemenskFoBk)\n\n"
                          f"^This ^is ^a ^bot ^by ^u/illueluci")
            pass
            print("commented on reddit")
        except Exception as e:
            print(e)
        self.last_posted_time = datetime.datetime.now()


bot = RedditBot()

subreddit = reddit.subreddit(STRING_OF_SUBREDDITS)

for c in subreddit.stream.comments(skip_existing=True):
    # print(c.body)
    bot.find_match(c)

